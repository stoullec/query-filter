name: TEST Filter smaller than integer
testcases:
  - name: TestCase with default value, exec cmd. Check if exit code != 1
    steps:
      - script: echo 'foo'
        type: exec
  #
  # ==== CREATE OBJECTS FOR TEST1
  #
  - name: Create Object1 salary 1800 for TEST1
    steps:
      - type: http
        method: POST
        headers:
          Accept: application/json
          Content-Type: application/json
        url: '{{.url}}/{{.filterClass}}/'
        body: '{
          "firstName": "Laurent",
          "lastName": "TOULLEC",
          "birthDate": "1995-05-22",
          "salary": 1800
          }'
        assertions:
          - result.statuscode ShouldEqual 201

  - name: Check if Object1 is created for TEST1
    steps:
      - type: http
        method: GET
        headers:
          Accept: application/json
          Content-Type: application/json
        url: '{{.url}}/{{.filterClass}}/{{.Create-Object1-salary-1800-for-TEST1.result.bodyjson.id}}'
        assertions:
          - result.statuscode ShouldEqual 200
          - result.bodyjson.id ShouldEqual {{.Create-Object1-salary-1800-for-TEST1.result.bodyjson.id}}
          - result.bodyjson.salary ShouldEqual {{.Create-Object1-salary-1800-for-TEST1.result.bodyjson.salary}}

  - name: Create Object2 salary equal to 1500 for TEST1
    steps:
      - type: http
        method: POST
        headers:
          Accept: application/json
          Content-Type: application/json
        url: '{{.url}}/{{.filterClass}}/'
        body: '{
          "firstName": "Jacques",
          "lastName": "TOULLEC",
          "birthDate": "1995-05-22",
          "salary": 1500
          }'
        assertions:
          - result.statuscode ShouldEqual 201

  - name: Check if Object2 is created for TEST1
    steps:
      - type: http
        method: GET
        headers:
          Accept: application/json
          Content-Type: application/json
        url: '{{.url}}/{{.filterClass}}/{{.Create-Object2-salary-equal-to-1500-for-TEST1.result.bodyjson.id}}'
        assertions:
          - result.statuscode ShouldEqual 200
          - result.bodyjson.id ShouldEqual {{.Create-Object2-salary-equal-to-1500-for-TEST1.result.bodyjson.id}}
          - result.bodyjson.salary ShouldEqual {{.Create-Object2-salary-equal-to-1500-for-TEST1.result.bodyjson.salary}}

  - name: Create Object3 salary lower than 1500 for TEST1
    steps:
      - type: http
        method: POST
        headers:
          Accept: application/json
          Content-Type: application/json
        url: '{{.url}}/{{.filterClass}}/'
        body: '{
          "firstName": "Marc",
          "lastName": "TOULLEC",
          "birthDate": "1995-05-22",
          "salary": 1400
          }'
        assertions:
          - result.statuscode ShouldEqual 201

  - name: Check if Object3 is created for TEST1
    steps:
      - type: http
        method: GET
        headers:
          Accept: application/json
          Content-Type: application/json
        url: '{{.url}}/{{.filterClass}}/{{.Create-Object3-salary-lower-than-1500-for-TEST1.result.bodyjson.id}}'
        assertions:
          - result.statuscode ShouldEqual 200
          - result.bodyjson.id ShouldEqual {{.Create-Object3-salary-lower-than-1500-for-TEST1.result.bodyjson.id}}
          - result.bodyjson.salary ShouldEqual {{.Create-Object3-salary-lower-than-1500-for-TEST1.result.bodyjson.salary}}

  #
  # ==== TEST1
  #
  - name: TEST1 Filter smaller than 1500
    steps:
      - type: http
        method: GET
        headers:
          Accept: application/json
          Content-Type: application/json
        url: '{{.url}}/{{.filterClass}}/filter?salary[st]=1500'
        assertions:
          - result.statuscode ShouldEqual 200
          - result.body ShouldNotContainSubstring  {{.Create-Object1-salary-1800-for-TEST1.result.bodyjson.salary}}
          - result.body ShouldNotContainSubstring  {{.Create-Object2-salary-equal-to-1500-for-TEST1.result.bodyjson.salary}}
          - result.body ShouldContainSubstring  {{.Create-Object3-salary-lower-than-1500-for-TEST1.result.bodyjson.salary}}

  #
  # ==== CLEAN OBJECTS FOR TEST1
  #

  - name: Delete Object1 for TEST1
    steps:
      - type: http
        method: DELETE
        headers:
          Accept: application/json
          Content-Type: application/json
        url: '{{.url}}/{{.filterClass}}/{{.Create-Object1-salary-1800-for-TEST1.result.bodyjson.id}}'
        assertions:
          - result.statuscode ShouldEqual 200

  - name: Check if Object1 is deleted for TEST1
    steps:
      - type: http
        method: GET
        headers:
          Accept: application/json
          Content-Type: application/json
        url: '{{.url}}/{{.filterClass}}/{{.Create-Object1-salary-1800-for-TEST1.result.bodyjson.id}}'
        assertions:
          - result.statuscode ShouldEqual 404

  - name: Delete Object2 for TEST1
    steps:
      - type: http
        method: DELETE
        headers:
          Accept: application/json
          Content-Type: application/json
        url: '{{.url}}/{{.filterClass}}/{{.Create-Object2-salary-equal-to-1500-for-TEST1.result.bodyjson.id}}'
        assertions:
          - result.statuscode ShouldEqual 200

  - name: Check if Object2 is deleted for TEST1
    steps:
      - type: http
        method: GET
        headers:
          Accept: application/json
          Content-Type: application/json
        url: '{{.url}}/{{.filterClass}}/{{.Create-Object2-salary-equal-to-1500-for-TEST1.result.bodyjson.id}}'
        assertions:
          - result.statuscode ShouldEqual 404

  - name: Delete Object3 for TEST1
    steps:
      - type: http
        method: DELETE
        headers:
          Accept: application/json
          Content-Type: application/json
        url: '{{.url}}/{{.filterClass}}/{{.Create-Object3-salary-lower-than-1500-for-TEST1.result.bodyjson.id}}'
        assertions:
          - result.statuscode ShouldEqual 200

  - name: Check if Object3 is deleted for TEST1
    steps:
      - type: http
        method: GET
        headers:
          Accept: application/json
          Content-Type: application/json
        url: '{{.url}}/{{.filterClass}}/{{.Create-Object3-salary-lower-than-1500-for-TEST1.result.bodyjson.id}}'
        assertions:
          - result.statuscode ShouldEqual 404